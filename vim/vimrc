let vimplug_path = '~/.vim/autoload'
if has('win32')
  let vimplug_path = '~/vimfiles/autoload'
  set shell=powershell
  set shellcmdflag=-NoProfile\ -NoLogo\ -NonInteractive\ -Command
  set shellpipe=|
  set shellredir=>
endif

let vim_plug = vimplug_path . '/plug.vim'

" auto-install vim-plug
if !filereadable(expand(vim_plug))
  let plugin_file = 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  execute "silent !mkdir -p " . vimplug_path
  if has('win32')
    execute "silent !(New-Object System.Net.WebClient).DownloadFile('" . plugin_file . "', '" . expand(vim_plug) . "')"
  else
    execute "silent !curl -fLo " . vim_plug . " " . plugin_file
  endif
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
Plug 'tpope/vim-sensible'

" Themes
Plug 'itchyny/lightline.vim'
Plug 'morhetz/gruvbox'

" Utility Plugins
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'

" Syntax Highlighters
Plug 'yko/mojo.vim', { 'do': 'make install' }
Plug 'kchmck/vim-coffee-script'
Plug 'leafgarland/typescript-vim'
Plug 'lervag/vimtex'
Plug 'akz92/vim-ionic2'
Plug 'leafgarland/typescript-vim'
Plug 'dart-lang/dart-vim-plugin'

" Syntax and Linters
Plug 'vim-syntastic/syntastic'
Plug 'natebosch/vim-lsc'

Plug 'azizlight/tasklist.vim'
Plug 'blindfs/vim-taskwarrior'

call plug#end()

if has('syntax')
  syntax enable
  set bg=dark
  silent! colorscheme gruvbox
  hi Normal ctermbg=None
  hi NonText ctermbg=None
endif

if has('autocmd')
  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on
endif

set autoindent
"set smartindent   " Insert extra indents automatically
set shiftwidth=2  " How much to indent by using >> etc
set tabstop=2     " Tab width
set expandtab     " Use spaces instead of tabs
set showmatch     " Show matching brackets
set showtabline=2 " Always show tabs

" Fortran source formatting options
let fortran_free_source=1
let fortran_do_enddo=1

"Syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_typescript_checkers = ['tslint']
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_tex_checkers = ['chktex']
if has('win32')
  " TODO figure out why chktex doesnt work
  let g:syntastic_tex_checkers = []
endif

let g:vimtex_syntax_minted = [
  \ {
  \  'lang': 'perl',
  \  'environments': [ 'perlcode' ]
  \ }
  \]

" restore cursor on re-entry into a file
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

" Gui specific messing
set guifont=Hack:h12:cANSI:qDRAFT
set guioptions-=R
set guioptions-=L
set guioptions-=r
set guioptions-=t
set guioptions-=e
